//insert
#include <iostream>

void insert(int arr[], int& n, int pos, int value) {
    // Crear espacio para el nuevo elemento
    for (int i = n - 1; i >= pos; i--) {
        arr[i + 1] = arr[i];
    }
    // Insertar el nuevo elemento
    arr[pos] = value;
    n++;
}

int main() {
    int arr[10] = {1, 2, 3, 4, 5};
    int n = 5;

    int value = 6;
    int* ptr = &value;

    insert(arr, n, 2, *ptr);

    for (int i = 0; i < n; i++) {
        std::cout << arr[i] << " ";
    }

    return 0;
}

//remove
#include <iostream>

void remove(int arr[], int& n, int pos) {
    // Eliminar el elemento en la posici√≥n dada
    for (int i = pos; i < n - 1; i++) {
        arr[i] = arr[i + 1];
    }
    n--;
}

int main() {
    int arr[10] = {1, 2, 3, 4, 5};
    int n = 5;

    int* ptr = &arr[2];

    remove(arr, n, ptr - arr);

    for (int i = 0; i < n; i++) {
        std::cout << arr[i] << " ";
    }

    return 0;
}
//push_back
#include <iostream>

void push_back(int arr[], int& n, int value) {
    // Insertar el nuevo elemento al final del array
    arr[n] = value;
    n++;
}

int main() {
    int arr[10] = {1, 2, 3, 4, 5};
    int n = 5;

    int value = 6;
    int* ptr = &value;

    push_back(arr, n, *ptr);

    for (int i = 0; i < n; i++) {
        std::cout << arr[i] << " ";
    }

    return 0;
}

